import "../styles/globals.css";
import {
  ChakraProvider,
  Container,
  Flex,
  Avatar,
  Heading,
  Accordion,
  AccordionItem,
  Box,
  AccordionButton,
  AccordionIcon,
  AccordionPanel,
  Center,
  Text,
  Button,
  Divider,
  Spacer,
} from "@chakra-ui/react";
import Head from "next/head";

const preListingTask = [
  {
    name: "Gather documents ",
    content:
      "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.",
    status: "Completed",
  },
  {
    name: "Market Research for pricing",
    content:
      "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.",
    status: "To Do",
  },
];

const listedTask = [
  {
    name: "Schedule open house",
    content:
      "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.",
    status: "Completed",
  },
  {
    name: "Respond to emails",
    content:
      "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.",
    status: "To Do",
  },
  {
    name: "Accept Offer",
    content:
      "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.",
    status: "To Do",
  },
];

const pendingTasks = [
  
      {
        name: "Get paperwork completed",
        content:
          "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.",
        status: "Completed",
      },
      {
        name: "Accept Offer",
        content:
          "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.",
        status: "To Do",
      },
    ]

function MyApp({ Component, pageProps }) {
  return (
    <>
      <Head>
        <title>Easy List</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <ChakraProvider>
        <body>
          <Flex top="1rem" right="1rem" align="center" padding="1.5rem">
            <Heading
              display={["none", "none", "block", "block"]}
              as="h1"
              size="lg"
            >
              Easy List
            </Heading>
            <Spacer/>
            <Flex display={["none", "none", "flex", "flex"]}>
              <Button
                as="a"
                variant="ghost"
                aria-label="/search"
                my={5}
                w="100%"
              >
                Search
              </Button>
              <Button
                as="a"
                variant="ghost"
                aria-label="/list"
                my={5}
                w="100%"
              >
                List
              </Button>
              <Button
                as="a"
                variant="ghost"
                aria-label="/about"
                my={5}
                w="100%"
              >
                About
              </Button>
            </Flex>
          </Flex>
          <Flex marginTop="20px" minHeight="900px" minWidth="1080px">
            <Box width="25%">
              <Flex
                justifyItems="center"
                justifyContent="center"
                flexGrow="1"
                flexDirection="column"
              >
                <Center>
                  <Avatar
                    size="2xl"
                    name="Nicu"
                    src="https://avatars.githubusercontent.com/u/7001751?v=4"
                  />
                </Center>
                <Center>
                  <Heading size="sm">Hello,</Heading>
                </Center>
                <Center>
                  {" "}
                  <Heading size="lg">Nicu!</Heading>
                </Center>

                <Spacer />
                <Heading size="sm">Logout</Heading>
              </Flex>
            </Box>
            <Box width="75%" padding="10px">
              <Center marginTop="10px">
                <Heading size="md">Listed Task</Heading>
              </Center>
              <Accordion allowToggle>
                {preListingTask.map((task) => {
                  return (
                    <AccordionItem>
                      <h2>
                        <AccordionButton>
                          <Box flex="1" textAlign="left">
                            <Text as={task.status == "Completed" ? "s" : ""}>
                              {task.name}
                            </Text>
                          </Box>
                          <AccordionIcon />
                        </AccordionButton>
                      </h2>
                      <AccordionPanel pb={4}>{task.content}</AccordionPanel>
                    </AccordionItem>
                  );
                })}
              </Accordion>
              <Center marginTop="10px">
                <Heading size="md">Pre Listing Task</Heading>
              </Center>
              <Accordion allowToggle>
                {listedTask.map((task) => {
                  return (
                    <AccordionItem>
                      <h2>
                        <AccordionButton>
                          <Box flex="1" textAlign="left">
                            <Text as={task.status == "Completed" ? "s" : ""}>
                              {task.name}
                            </Text>
                          </Box>
                          <AccordionIcon />
                        </AccordionButton>
                      </h2>
                      <AccordionPanel pb={4}>{task.content}</AccordionPanel>
                    </AccordionItem>
                  );
                })}
              </Accordion>
              <Center marginTop="10px">
                <Heading size="md">Closing Task</Heading>
              </Center>
              <Accordion allowToggle>
                {pendingTasks.map((task) => {
                  return (
                    <AccordionItem>
                      <h2>
                        <AccordionButton>
                          <Box flex="1" textAlign="left">
                            <Text as={task.status == "Completed" ? "s" : ""}>
                              {task.name}
                            </Text>
                          </Box>
                          <AccordionIcon />
                        </AccordionButton>
                      </h2>
                      <AccordionPanel pb={4}>{task.content}</AccordionPanel>
                    </AccordionItem>
                  );
                })}
              </Accordion>
            </Box>
          </Flex>
        </body>
      </ChakraProvider>
    </>
  );
}

export default MyApp;
